{"version":3,"sources":["types/types.ts","steps/steps.ts","components/Modal/Modal.tsx","api/index.ts","reducer/candidatesReducer.ts","CandidatesProvider/CandidatesProvider.tsx","customHooks/useSpreadContext.tsx","components/FormModal/FormModal.tsx","customHooks/useForm.ts","components/CandidateItem/CandidateItem.tsx","components/CandidatesList/CandidatesList.tsx","components/Candidates/Candidates.tsx","components/Step/Step.tsx","components/StepsList/StepsList.tsx","components/Header/Header.tsx","CandidatesApp.tsx","customHooks/useModal.ts","index.tsx"],"names":["Actions","steps","Modal","closeModal","children","id","className","onClick","e","stopPropagation","list","Promise","resolve","candidates","candidatesReducer","state","action","type","ADD","candidatesList","payload","UPDATE","map","candidate","step","nextStep","SET_ALL","CandidatesContext","createContext","CandidatesProvider","useReducer","JSON","parse","window","localStorage","getItem","candidatesState","dispatch","useEffect","api","then","res","length","setItem","stringify","data","Provider","value","useSpreadContext","context","useContext","FormModal","initialState","useState","values","setValues","handleChange","target","name","resetForm","useForm","comments","completeSubmit","Date","now","toString","onSubmit","preventDefault","htmlFor","onChange","CandidateItem","actualStepIndex","indexOf","previousStep","CandidatesList","stepCandidates","Candidates","filter","Step","openModal","StepsList","Header","CandidatesApp","isOpenModal","setIsOpenModal","useModal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c45acf3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport interface CandidateType {\r\n  id: string;\r\n  name: string;\r\n  step:\r\n    | \"Entrevista inicial\"\r\n    | \"Entrevista técnica\"\r\n    | \"Oferta\"\r\n    | \"Asignación\"\r\n    | \"Rechazo\";\r\n  comments: string;\r\n}\r\nexport type ReducerState = {\r\n  candidatesList: CandidateType[];\r\n};\r\n\r\nexport interface CandidatesContextType {\r\n  candidatesState: ReducerState;\r\n  dispatch: React.Dispatch<ActionType>;\r\n}\r\n\r\nexport enum Actions {\r\n  ADD = \"ADD - CANDIDATE\",\r\n  UPDATE = \"UPDATE - CANDIDATE\",\r\n  SET_ALL = \"SET ALL- CANDIDATES\",\r\n}\r\n\r\nexport type ActionType =\r\n  | { type: Actions.ADD; payload: CandidateType }\r\n  | {\r\n      type: Actions.UPDATE;\r\n      payload: {\r\n        id: string;\r\n        nextStep: CandidateType[\"step\"];\r\n      };\r\n    }\r\n  | { type: Actions.SET_ALL; payload: CandidateType[] };\r\n","import { CandidateType } from \"../types/types\";\r\n\r\nexport const steps: CandidateType[\"step\"][] = [\r\n  \"Entrevista inicial\",\r\n  \"Entrevista técnica\",\r\n  \"Oferta\",\r\n  \"Asignación\",\r\n  \"Rechazo\",\r\n];\r\n","import { MouseEvent } from \"react\";\r\nimport \"./Modal.scss\";\r\n\r\ninterface ModalProps {\r\n  closeModal: (event: MouseEvent<HTMLElement>) => void;\r\n  children: JSX.Element | JSX.Element[];\r\n}\r\n\r\nexport const Modal = ({ closeModal, children }: ModalProps) => {\r\n  const handlePropagation = (e: MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <div id=\"container\" className=\"modal\" onClick={closeModal}>\r\n      <div onClick={handlePropagation}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n","import { CandidateType } from \"../types/types\";\nimport candidates from \"./candidates.json\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  candidates: {\n    list: (): Promise<CandidateType[]> =>\n      Promise.resolve(candidates as CandidateType[]),\n  },\n};\n","import { Actions, ActionType, ReducerState } from \"../types/types\";\r\n\r\nexport const candidatesReducer = (state: ReducerState, action: ActionType) => {\r\n  switch (action.type) {\r\n    case Actions.ADD:\r\n      return {\r\n        ...state,\r\n        candidatesList: [...state.candidatesList, action.payload],\r\n      };\r\n    case Actions.UPDATE:\r\n      return {\r\n        ...state,\r\n        candidatesList: [\r\n          ...state.candidatesList.map((candidate) => {\r\n            if (candidate.id === action.payload.id) {\r\n              return {\r\n                ...candidate,\r\n                step: action.payload.nextStep,\r\n              };\r\n            }\r\n            return candidate;\r\n          }),\r\n        ],\r\n      };\r\n    case Actions.SET_ALL:\r\n      return {\r\n        ...state,\r\n        candidatesList: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createContext, useEffect, useReducer } from \"react\";\r\nimport api from \"../api\";\r\nimport { candidatesReducer } from \"../reducer/candidatesReducer\";\r\n\r\nimport { Actions, CandidatesContextType } from \"../types/types\";\r\n\r\nexport const CandidatesContext = createContext<CandidatesContextType>(\r\n  {} as CandidatesContextType\r\n);\r\n\r\ninterface ProviderProps {\r\n  children: JSX.Element | JSX.Element[];\r\n}\r\n\r\nexport const CandidatesProvider = ({ children }: ProviderProps) => {\r\n  const [candidatesState, dispatch] = useReducer(candidatesReducer, {\r\n    candidatesList:\r\n      JSON.parse(window.localStorage.getItem(\"candidatesList\") as string) || [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    api.candidates.list().then((res) => {\r\n      if (candidatesState.candidatesList.length === 0) {\r\n        dispatch({\r\n          type: Actions.SET_ALL,\r\n          payload: res,\r\n        });\r\n      }\r\n    });\r\n    window.localStorage.setItem(\r\n      \"candidatesList\",\r\n      JSON.stringify(candidatesState.candidatesList)\r\n    );\r\n  }, [candidatesState, dispatch]);\r\n\r\n  const data = {\r\n    candidatesState,\r\n    dispatch,\r\n  };\r\n\r\n  return (\r\n    <CandidatesContext.Provider value={data}>\r\n      {children}\r\n    </CandidatesContext.Provider>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { CandidatesContext } from \"../CandidatesProvider/CandidatesProvider\";\r\n\r\nexport const useSpreadContext = () => {\r\n  const context = useContext(CandidatesContext);\r\n  return { ...context };\r\n};\r\n","import { FormEvent } from \"react\";\r\nimport { useForm } from \"../../customHooks/useForm\";\r\nimport { Actions } from \"../../types/types\";\r\nimport { steps } from \"../../steps/steps\";\r\nimport { Modal } from \"../Modal/Modal\";\r\nimport { useSpreadContext } from \"../../customHooks/useSpreadContext\";\r\n\r\ninterface FormData {\r\n  name: string;\r\n  comments: string;\r\n}\r\n\r\ninterface FormModalProps {\r\n  closeModal: () => void;\r\n}\r\n\r\nconst FormModal = ({ closeModal }: FormModalProps) => {\r\n  const { dispatch } = useSpreadContext();\r\n  const { name, comments, handleChange, resetForm } = useForm<FormData>({\r\n    name: \"\",\r\n    comments: \"\",\r\n  });\r\n\r\n  const addCandidate = () => {\r\n    dispatch({\r\n      type: Actions.ADD,\r\n      payload: {\r\n        id: Date.now().toString(),\r\n        name: name,\r\n        comments: comments,\r\n        step: steps[0],\r\n      },\r\n    });\r\n  };\r\n\r\n  const completeSubmit = () => {\r\n    addCandidate();\r\n    closeModal();\r\n    resetForm();\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (name.length > 0) completeSubmit();\r\n  };\r\n\r\n  return (\r\n    <Modal closeModal={closeModal}>\r\n      <div className=\"modal__content\">\r\n        <h1>Nuevo candidato</h1>\r\n        <form onSubmit={handleSubmit} className=\"modal__form\" action=\"\">\r\n          <label htmlFor=\"name\">Nombre:</label>\r\n          <input\r\n            value={name}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n          />\r\n\r\n          <label htmlFor=\"comments\">Comentarios:</label>\r\n          <input\r\n            value={comments}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            id=\"comments\"\r\n            name=\"comments\"\r\n          />\r\n\r\n          <button className=\"modal__button\">Añadir</button>\r\n        </form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport { FormModal };\r\n","import { ChangeEvent, useState } from \"react\";\r\n\r\nexport const useForm = <T>(initialState: T) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const resetForm = () => setValues(initialState);\r\n\r\n  const handleChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\r\n    setValues({ ...values, [target.name]: target.value });\r\n  };\r\n\r\n  return { ...values, values, handleChange, resetForm };\r\n};\r\n","import { useSpreadContext } from \"../../customHooks/useSpreadContext\";\r\nimport { steps } from \"../../steps/steps\";\r\nimport { Actions, CandidateType } from \"../../types/types\";\r\nimport \"./CandidateItem.scss\";\r\n\r\ninterface CandidateItemProps {\r\n  candidate: CandidateType;\r\n}\r\nconst CandidateItem = ({ candidate }: CandidateItemProps) => {\r\n  const { dispatch } = useSpreadContext();\r\n\r\n  const goBack = () => {\r\n    const actualStepIndex = steps.indexOf(candidate?.step);\r\n    const previousStep = steps[actualStepIndex - 1] ?? candidate?.step;\r\n    dispatch({\r\n      type: Actions.UPDATE,\r\n      payload: {\r\n        id: candidate.id,\r\n        nextStep: previousStep as CandidateType[\"step\"],\r\n      },\r\n    });\r\n  };\r\n  const goNext = () => {\r\n    const actualStepIndex = steps.indexOf(candidate?.step);\r\n    const nextStep = steps[actualStepIndex + 1] ?? candidate?.step;\r\n    dispatch({\r\n      type: Actions.UPDATE,\r\n      payload: {\r\n        id: candidate.id,\r\n        nextStep: nextStep as CandidateType[\"step\"],\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"candidate\">\r\n      <div className=\"candidate__info\">\r\n        <p className=\"candidate__name\">{candidate.name}</p>\r\n        <p className=\"candidate__comments\">{candidate.comments}</p>\r\n      </div>\r\n      <div className=\"candidate__controls\">\r\n        <button onClick={goBack} className=\"candidate__control--back\">\r\n          {\"<\"}\r\n        </button>\r\n        <button onClick={goNext} className=\"candidate__control--next\">\r\n          {\">\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandidateItem;\r\n","import { CandidateType } from \"../../types/types\";\r\nimport CandidateItem from \"../CandidateItem/CandidateItem\";\r\n\r\ninterface CandidatesListProps {\r\n  stepCandidates: CandidateType[];\r\n}\r\n\r\nconst CandidatesList = ({ stepCandidates }: CandidatesListProps) => {\r\n  return (\r\n    <>\r\n      {stepCandidates?.map((candidate) => {\r\n        return <CandidateItem key={candidate.id} candidate={candidate} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CandidatesList;\r\n","import { CandidateType } from \"../../types/types\";\r\nimport CandidatesList from \"../CandidatesList/CandidatesList\";\r\nimport \"./Candidates.scss\";\r\n\r\ninterface CandidatesProps {\r\n  candidatesList: CandidateType[];\r\n  step: string;\r\n}\r\n\r\nexport const Candidates = ({ candidatesList, step }: CandidatesProps) => {\r\n  const stepCandidates = candidatesList?.filter(\r\n    (candidate) => candidate.step === step\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"candidates\">\r\n        {stepCandidates.length > 0 ? (\r\n          <CandidatesList stepCandidates={stepCandidates} />\r\n        ) : (\r\n          <p className=\"candidates__placeholder\">No hay candidatos</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { CandidateType } from \"../../types/types\";\r\nimport { Candidates } from \"../Candidates/Candidates\";\r\nimport \"./Step.scss\";\r\n\r\ninterface StepProps {\r\n  step: CandidateType[\"step\"];\r\n  candidatesList: CandidateType[];\r\n  openModal: () => void;\r\n}\r\n\r\nexport const Step = ({ step, candidatesList, openModal }: StepProps) => {\r\n  return (\r\n    <section className={`${step} step`}>\r\n      <h1 className=\"step__title\">{step}</h1>\r\n\r\n      <Candidates candidatesList={candidatesList} step={step} />\r\n\r\n      {step === \"Entrevista inicial\" && (\r\n        <button onClick={openModal} className=\"step__add\">\r\n          Añadir Candidato\r\n        </button>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n","import { useSpreadContext } from \"../../customHooks/useSpreadContext\";\r\nimport { steps } from \"../../steps/steps\";\r\nimport { Step } from \"../Step/Step\";\r\n\r\ninterface StepListProps {\r\n  openModal: () => void;\r\n}\r\n\r\nexport const StepsList = ({ openModal }: StepListProps) => {\r\n  const { candidatesState } = useSpreadContext();\r\n  const { candidatesList } = candidatesState;\r\n\r\n  return (\r\n    <div className=\"steps\">\r\n      {steps?.map((step) => {\r\n        return (\r\n          <Step\r\n            key={step}\r\n            openModal={openModal}\r\n            step={step}\r\n            candidatesList={candidatesList}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","export const Header = () => {\r\n  return (\r\n    <header className=\"candidates-app__header\">\r\n      <h2>Gestor de candidatos</h2>\r\n    </header>\r\n  );\r\n};\r\n","import { useModal } from \"./customHooks/useModal\";\r\nimport { FormModal } from \"./components/FormModal/FormModal\";\r\nimport { StepsList } from \"./components/StepsList/StepsList\";\r\nimport { Header } from \"./components/Header/Header\";\r\nimport \"./main.scss\";\r\n\r\nexport const CandidatesApp = () => {\r\n  const { isOpenModal, openModal, closeModal } = useModal();\r\n\r\n  return (\r\n    <div className=\"candidates-app\">\r\n      <Header />\r\n      <StepsList openModal={openModal} />\r\n      {isOpenModal && <FormModal closeModal={closeModal} />}\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useModal = () => {\r\n  const [isOpenModal, setIsOpenModal] = useState<boolean>(false);\r\n\r\n  const openModal = () => setIsOpenModal(true);\r\n\r\n  const closeModal = () => {\r\n    setIsOpenModal(false);\r\n  };\r\n\r\n  return { isOpenModal, closeModal, openModal };\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CandidatesApp } from \"./CandidatesApp\";\nimport { CandidatesProvider } from \"./CandidatesProvider/CandidatesProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CandidatesProvider>\n      <CandidatesApp />\n    </CandidatesProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}